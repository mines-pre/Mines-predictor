from flask import Flask, request, jsonify
import os
import requests
import json
import random

app = Flask(__name__)

# Environment variables
BOT_TOKEN = os.environ.get('BOT_TOKEN')
ADMIN_CHAT_ID = os.environ.get('ADMIN_CHAT_ID')
VERCEL_URL = os.environ.get('VERCEL_URL')
AFFILIATE_LINK = os.environ.get('AFFILIATE_LINK', 'https://lkpq.cc/73f2')

# Storage
users_data = {}
postback_events = []

# All Mines Signals
MINES_SIGNALS = [
    {"traps": 1, "accuracy": 97, "grid": ["ЁЯФТЁЯФТЁЯФТЁЯФТЁЯТ░", "ЁЯФТЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯТ░"]},
    {"traps": 1, "accuracy": 90, "grid": ["ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯТ░ЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 96, "grid": ["ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯТ░", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯТ░", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 95, "grid": ["ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯТ░ЁЯФТ"]},
    {"traps": 1, "accuracy": 96, "grid": ["ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯТ░ЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 91, "grid": ["ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯТ░ЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 94, "grid": ["ЁЯФТЁЯТ░ЁЯТ░ЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯТ░", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯТ░ЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 92, "grid": ["ЁЯФТЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯТ░ЁЯТ░ЁЯФТЁЯФТЁЯТ░", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 90, "grid": ["ЁЯТ░ЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯТ░ЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 92, "grid": ["ЁЯФТЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯТ░ЁЯТ░ЁЯФТ"]},
    {"traps": 1, "accuracy": 93, "grid": ["ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 97, "grid": ["ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯТ░ЁЯФТЁЯФТЁЯТ░", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 90, "grid": ["ЁЯТ░ЁЯФТЁЯФТЁЯТ░ЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ"]},
    {"traps": 1, "accuracy": 96, "grid": ["ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯТ░ЁЯТ░ЁЯФТ"]},
    {"traps": 1, "accuracy": 94, "grid": ["ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯФТЁЯФТЁЯТ░ЁЯФТЁЯФТ", "ЁЯТ░ЁЯФТЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ", "ЁЯФТЁЯТ░ЁЯФТЁЯФТЁЯФТ"]}
]

# Complete Language Messages
MESSAGES = {
    'en': {
        'welcome': 'тЬЕ <b>You selected English!</b>',
        'step1': 'ЁЯМР <b>Step 1 - Register</b>',
        'account_must_be_new': 'тА╝я╕П <b>THE ACCOUNT MUST BE NEW</b>',
        'step1_instructions': '1я╕ПтГг If after clicking the "REGISTER" button you get to the old account, you need to log out of it and click the button again.\n\n2я╕ПтГг Specify a promocode during registration: <b>OGGY</b>\n\n3я╕ПтГг Make a Minimum deposit atleast <b>500тВ╣ or 5$</b> in any currency',
        'after_success': 'тЬЕ After Successfully REGISTRATION, click the "CHECK REGISTRATION" button',
        'enter_player_id': 'ЁЯОп <b>Please enter your 1Win Player ID to verify:</b>',
        'how_to_find_id': 'ЁЯУЭ <b>How to find Player ID:</b>\n1. Login to 1Win account\n2. Go to Profile Settings\n3. Copy Player ID number\n4. Paste it here',
        'enter_id_now': 'ЁЯФв <b>Enter your Player ID now:</b>',
        'congratulations': 'ЁЯОЙ <b>Congratulations!</b>',
        'not_registered': 'тЭМ <b>Sorry, You are Not Registered!</b>',
        'not_registered_msg': 'Please click the REGISTER button first and complete your registration using our link.\n\nAfter successful registration, come back and enter your Player ID.',
        'registered_no_deposit': 'ЁЯОЙ <b>Great, you have successfully completed registration!</b>',
        'sync_success': 'тЬЕ Your account is synchronized with the bot',
        'deposit_required': 'ЁЯТ┤ To gain access to signals, deposit your account (make a deposit) with at least <b>500тВ╣ or $5</b> in any currency',
        'after_deposit': 'ЁЯХ╣я╕П After successfully replenishing your account, click on the CHECK DEPOSIT button and gain access',
        'limit_reached': "тЪая╕П <b>You've Reached Your Limit!</b>",
        'deposit_again': 'Please deposit again atleast <b>400тВ╣ or 4$</b> in any currency for continue prediction',
        'get_signal': 'ЁЯХ╣я╕П Get a signal',
        'next_signal': 'ЁЯФД Next Signal',
        'back': 'ЁЯФЩ Back',
        'deposit_again_btn': 'ЁЯТ░ Deposit Again',
        'register_now': 'ЁЯУ▓ Register Now',
        'check_deposit': 'ЁЯФН Check Deposit',
        'register_btn': 'ЁЯУ▓ Register',
        'check_registration_btn': 'ЁЯФН Check Registration',
        'motivational': "ЁЯТО You're missing your chance to win big! /start to get Prediction now ЁЯЪА"
    },
    'hi': {
        'welcome': 'тЬЕ <b>рдЖрдкрдиреЗ рд╣рд┐рдВрджреА рдЪреБрдиреА!</b>',
        'step1': 'ЁЯМР <b>рдЪрд░рдг 1 - рдкрдВрдЬреАрдХрд░рдг</b>',
        'account_must_be_new': 'тА╝я╕П <b>рдЦрд╛рддрд╛ рдирдпрд╛ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП</b>',
        'step1_instructions': '1я╕ПтГг рдпрджрд┐ "рдкрдВрдЬреАрдХрд░рдг" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж рдЖрдкрдХреЛ рдкреБрд░рд╛рдирд╛ рдЦрд╛рддрд╛ рдорд┐рд▓рддрд╛ рд╣реИ, рддреЛ рдЖрдкрдХреЛ рдЙрд╕рд╕реЗ рд▓реЙрдЧ рдЖрдЙрдЯ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ рдФрд░ рдмрдЯрди рдХреЛ рдлрд┐рд░ рд╕реЗ рдХреНрд▓рд┐рдХ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ред\n\n2я╕ПтГг рдкрдВрдЬреАрдХрд░рдг рдХреЗ рджреМрд░рд╛рди рдкреНрд░реЛрдореЛрдХреЛрдб рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдХрд░реЗрдВ: <b>OGGY</b>\n\n3я╕ПтГг рдиреНрдпреВрдирддрдо рдЬрдорд╛ рдХрд░реЗрдВ рдХрдо рд╕реЗ рдХрдо <b>500тВ╣ рдпрд╛ 5$</b> рдХрд┐рд╕реА рднреА рдореБрджреНрд░рд╛ рдореЗрдВ',
        'after_success': 'тЬЕ рд╕рдлрд▓ рдкрдВрдЬреАрдХрд░рдг рдХреЗ рдмрд╛рдж, "рдкрдВрдЬреАрдХрд░рдг рдЬрд╛рдВрдЪреЗрдВ" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ',
        'enter_player_id': 'ЁЯОп <b>рдХреГрдкрдпрд╛ рд╕рддреНрдпрд╛рдкрди рдХреЗ рд▓рд┐рдП рдЕрдкрдирд╛ 1Win Player ID рджрд░реНрдЬ рдХрд░реЗрдВ:</b>',
        'how_to_find_id': 'ЁЯУЭ <b>Player ID рдХреИрд╕реЗ рдвреВрдВрдвреЗрдВ:</b>\n1. 1Win рдЦрд╛рддреЗ рдореЗрдВ рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ\n2. рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕реЗрдЯрд┐рдВрдЧреНрд╕ рдкрд░ рдЬрд╛рдПрдВ\n3. Player ID рдирдВрдмрд░ рдХреЙрдкреА рдХрд░реЗрдВ\n4. рдпрд╣рд╛рдВ рдкреЗрд╕реНрдЯ рдХрд░реЗрдВ',
        'enter_id_now': 'ЁЯФв <b>рдЕрдкрдирд╛ Player ID рдЕрднреА рджрд░реНрдЬ рдХрд░реЗрдВ:</b>',
        'congratulations': 'ЁЯОЙ <b>рдмрдзрд╛рдИ рд╣реЛ!</b>',
        'not_registered': 'тЭМ <b>рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдЖрдк рдкрдВрдЬреАрдХреГрдд рдирд╣реАрдВ рд╣реИрдВ!</b>',
        'not_registered_msg': 'рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ REGISTER рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рдФрд░ рд╣рдорд╛рд░реЗ рд▓рд┐рдВрдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЕрдкрдирд╛ рдкрдВрдЬреАрдХрд░рдг рдкреВрд░рд╛ рдХрд░реЗрдВред\n\nрд╕рдлрд▓ рдкрдВрдЬреАрдХрд░рдг рдХреЗ рдмрд╛рдж, рд╡рд╛рдкрд╕ рдЖрдПрдВ рдФрд░ рдЕрдкрдирд╛ Player ID рджрд░реНрдЬ рдХрд░реЗрдВред',
        'registered_no_deposit': 'ЁЯОЙ <b>рдмрдврд╝рд┐рдпрд╛, рдЖрдкрдиреЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкрдВрдЬреАрдХрд░рдг рдкреВрд░рд╛ рдХрд░ рд▓рд┐рдпрд╛ рд╣реИ!</b>',
        'sync_success': 'тЬЕ рдЖрдкрдХрд╛ рдЦрд╛рддрд╛ рдмреЙрдЯ рдХреЗ рд╕рд╛рде рд╕рд┐рдВрдХреНрд░рдирд╛рдЗрдЬрд╝ рд╣реЛ рдЧрдпрд╛ рд╣реИ',
        'deposit_required': 'ЁЯТ┤ рд╕рд┐рдЧреНрдирд▓ рддрдХ рдкрд╣реБрдВрдЪ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЕрдкрдиреЗ рдЦрд╛рддреЗ рдореЗрдВ рдХрдо рд╕реЗ рдХрдо <b>500тВ╣ рдпрд╛ $5</b> рдХрд┐рд╕реА рднреА рдореБрджреНрд░рд╛ рдореЗрдВ рдЬрдорд╛ рдХрд░реЗрдВ',
        'after_deposit': 'ЁЯХ╣я╕П рдЕрдкрдирд╛ рдЦрд╛рддрд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рднрд░рдиреЗ рдХреЗ рдмрд╛рдж, CHECK DEPOSIT рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рдФрд░ рдкрд╣реБрдВрдЪ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ',
        'limit_reached': "тЪая╕П <b>рдЖрдк рдЕрдкрдиреА рд╕реАрдорд╛ рддрдХ рдкрд╣реБрдБрдЪ рдЧрдП рд╣реИрдВ!</b>",
        'deposit_again': 'рдХреГрдкрдпрд╛ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдЬрд╛рд░реА рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдлрд┐рд░ рд╕реЗ рдХрдо рд╕реЗ рдХрдо <b>400тВ╣ рдпрд╛ 4$</b> рдХрд┐рд╕реА рднреА рдореБрджреНрд░рд╛ рдореЗрдВ рдЬрдорд╛ рдХрд░реЗрдВ',
        'get_signal': 'ЁЯХ╣я╕П рд╕рд┐рдЧреНрдирд▓ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ',
        'next_signal': 'ЁЯФД рдЕрдЧрд▓рд╛ рд╕рд┐рдЧреНрдирд▓',
        'back': 'ЁЯФЩ рд╡рд╛рдкрд╕',
        'deposit_again_btn': 'ЁЯТ░ рдлрд┐рд░ рд╕реЗ рдЬрдорд╛ рдХрд░реЗрдВ',
        'register_now': 'ЁЯУ▓ рдЕрднреА рдкрдВрдЬреАрдХрд░рдг рдХрд░реЗрдВ',
        'check_deposit': 'ЁЯФН рдЬрдорд╛ рдЬрд╛рдВрдЪреЗрдВ',
        'register_btn': 'ЁЯУ▓ рдкрдВрдЬреАрдХрд░рдг',
        'check_registration_btn': 'ЁЯФН рдкрдВрдЬреАрдХрд░рдг рдЬрд╛рдВрдЪреЗрдВ',
        'motivational': "ЁЯТО рдЖрдк рдмрдбрд╝реА рдЬреАрдд рдХрд╛ рдореМрдХрд╛ рдЦреЛ рд░рд╣реЗ рд╣реИрдВ! рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП /start рджрдмрд╛рдПрдВ ЁЯЪА"
    },
    'bn': {
        'welcome': 'тЬЕ <b>ржЖржкржирж┐ ржмрж╛ржВрж▓рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЗржЫрзЗржи!</b>',
        'step1': 'ЁЯМР <b>ржзрж╛ржк 1 - ржирж┐ржмржирзНржзржи</b>',
        'account_must_be_new': 'тА╝я╕П <b>ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯржЯрж┐ ржирждрзБржи рж╣рждрзЗ рж╣ржмрзЗ</b>',
        'step1_instructions': 'рззя╕ПтГг "ржирж┐ржмржирзНржзржи" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж╛рж░ ржкрж░рзЗ ржпржжрж┐ ржЖржкржирж┐ ржкрзБрж░рж╛ржирзЛ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ ржкрзНрж░ржмрзЗрж╢ ржХрж░рзЗржи, рждрж╛рж╣рж▓рзЗ ржЖржкржирж╛ржХрзЗ ржПржЯрж┐ ржерзЗржХрзЗ рж▓ржЧ ржЖржЙржЯ ржХрж░рждрзЗ рж╣ржмрзЗ ржПржмржВ ржмрж╛ржЯржиржЯрж┐ ржЖржмрж╛рж░ ржХрзНрж▓рж┐ржХ ржХрж░рждрзЗ рж╣ржмрзЗред\n\nрзия╕ПтГг ржирж┐ржмржирзНржзржирзЗрж░ рж╕ржоржпрж╝ ржкрзНрж░ржорзЛржХрзЛржб ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХрж░рзБржи: <b>OGGY</b>\n\nрзйя╕ПтГг ржирзНржпрзВржирждржо ржЬржорж╛ ржХрж░рзБржи ржХржоржкржХрзНрж╖рзЗ <b>500тВ╣ ржмрж╛ 5$</b> ржпрзЗржХрзЛржирзЛ ржорзБржжрзНрж░рж╛ржпрж╝',
        'after_success': 'тЬЕ рж╕ржлрж▓ ржирж┐ржмржирзНржзржирзЗрж░ ржкрж░рзЗ, "ржирж┐ржмржирзНржзржи ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржи" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи',
        'enter_player_id': 'ЁЯОп <b>ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржкржирж╛рж░ 1Win Player ID рж▓рж┐ржЦрзБржи:</b>',
        'how_to_find_id': 'ЁЯУЭ <b>Player ID ржХрж┐ржнрж╛ржмрзЗ ржЦрзБржБржЬрзЗ ржкрж╛ржмрзЗржи:</b>\n1. 1Win ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ рж▓ржЧржЗржи ржХрж░рзБржи\n2. ржкрзНрж░рзЛржлрж╛ржЗрж▓ рж╕рзЗржЯрж┐ржВрж╕рзЗ ржпрж╛ржи\n3. Player ID ржиржорзНржмрж░ ржХржкрж┐ ржХрж░рзБржи\n4. ржПржЦрж╛ржирзЗ ржкрзЗрж╕рзНржЯ ржХрж░рзБржи',
        'enter_id_now': 'ЁЯФв <b>ржПржЦржиржЗ ржЖржкржирж╛рж░ Player ID рж▓рж┐ржЦрзБржи:</b>',
        'congratulations': 'ЁЯОЙ <b>ржЕржнрж┐ржиржирзНржжржи!</b>',
        'not_registered': 'тЭМ <b>ржжрзБржГржЦрж┐ржд, ржЖржкржирж┐ ржирж┐ржмржирзНржзрж┐ржд ржиржи!</b>',
        'not_registered_msg': 'ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржкрзНрж░ржержорзЗ REGISTER ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи ржПржмржВ ржЖржорж╛ржжрзЗрж░ рж▓рж┐ржЩрзНржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржкржирж╛рж░ ржирж┐ржмржирзНржзржи рж╕ржорзНржкрзВрж░рзНржг ржХрж░рзБржиред\n\nрж╕ржлрж▓ ржирж┐ржмржирзНржзржирзЗрж░ ржкрж░рзЗ, ржлрж┐рж░рзЗ ржЖрж╕рзБржи ржПржмржВ ржЖржкржирж╛рж░ Player ID рж▓рж┐ржЦрзБржиред',
        'registered_no_deposit': 'ЁЯОЙ <b>ржжрж╛рж░рзБржи, ржЖржкржирж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржирж┐ржмржирзНржзржи рж╕ржорзНржкрзВрж░рзНржг ржХрж░рзЗржЫрзЗржи!</b>',
        'sync_success': 'тЬЕ ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржмржЯрзЗрж░ рж╕рж╛ржерзЗ рж╕рж┐ржЩрзНржХрзНрж░рзЛржирж╛ржЗржЬ рж╣ржпрж╝рзЗржЫрзЗ',
        'deposit_required': 'ЁЯТ┤ рж╕рж┐ржЧржирзНржпрж╛рж▓ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрзЗрждрзЗ, ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ ржХржоржкржХрзНрж╖рзЗ <b>500тВ╣ ржмрж╛ $5</b> ржпрзЗржХрзЛржирзЛ ржорзБржжрзНрж░рж╛ржпрж╝ ржЬржорж╛ ржХрж░рзБржи',
        'after_deposit': 'ЁЯХ╣я╕П ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ рж░рж┐ржЪрж╛рж░рзНржЬ ржХрж░рж╛рж░ ржкрж░рзЗ, CHECK DEPOSIT ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи ржПржмржВ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрж╛ржи',
        'limit_reached': "тЪая╕П <b>ржЖржкржирж┐ ржЖржкржирж╛рж░ рж╕рзАржорж╛ржпрж╝ ржкрзМржБржЫрзЗ ржЧрзЗржЫрзЗржи!</b>",
        'deposit_again': 'ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрзЗрждрзЗ ржЖржмрж╛рж░ ржХржоржкржХрзНрж╖рзЗ <b>400тВ╣ ржмрж╛ 4$</b> ржпрзЗржХрзЛржирзЛ ржорзБржжрзНрж░рж╛ржпрж╝ ржЬржорж╛ ржХрж░рзБржи',
        'get_signal': 'ЁЯХ╣я╕П рж╕рж┐ржЧржирзНржпрж╛рж▓ ржкрж╛ржи',
        'next_signal': 'ЁЯФД ржкрж░ржмрж░рзНрждрзА рж╕рж┐ржЧржирзНржпрж╛рж▓',
        'back': 'ЁЯФЩ ржлрж┐рж░рзЗ ржпрж╛ржи',
        'deposit_again_btn': 'ЁЯТ░ ржЖржмрж╛рж░ ржЬржорж╛ ржХрж░рзБржи',
        'register_now': 'ЁЯУ▓ ржПржЦржиржЗ ржирж┐ржмржирзНржзржи ржХрж░рзБржи',
        'check_deposit': 'ЁЯФН ржЬржорж╛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржи',
        'register_btn': 'ЁЯУ▓ ржирж┐ржмржирзНржзржи',
        'check_registration_btn': 'ЁЯФН ржирж┐ржмржирзНржзржи ржкрж░рзАржХрзНрж╖рж╛',
        'motivational': "ЁЯТО ржЖржкржирж┐ ржмржбрж╝ ржЬржпрж╝рзЗрж░ рж╕рзБржпрзЛржЧ рж╣рж╛рж░рж╛ржЪрзНржЫрзЗржи! ржнржмрж┐рж╖рзНржпржжрзНржмрж╛ржгрзА ржкрзЗрждрзЗ /start ржЯрж┐ржкрзБржи ЁЯЪА"
    },
    'ur': {
        'welcome': 'тЬЕ <b>╪в┘╛ ┘Ж█Т ╪з╪▒╪п┘И ┘Е┘Ж╪к╪о╪и ┌й█М!</b>',
        'step1': 'ЁЯМР <b>┘Е╪▒╪н┘Д█Б 1 - ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж</b>',
        'account_must_be_new': 'тА╝я╕П <b>╪з┌й╪з╪д┘Ж┘╣ ┘Ж█М╪з █Б┘И┘Ж╪з ┌Ж╪з█Б█М█Т</b>',
        'step1_instructions': '1я╕ПтГг ╪з┌п╪▒ "╪▒╪м╪│┘╣╪▒" ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒┘Ж█Т ┌й█Т ╪и╪╣╪п ╪в┘╛ ┌й┘И ┘╛╪▒╪з┘Ж╪з ╪з┌й╪з╪д┘Ж┘╣ ┘Е┘Д╪к╪з █Б█Т╪М ╪к┘И ╪в┘╛ ┌й┘И ╪з╪│ ╪│█Т ┘Д╪з┌п ╪в╪д┘╣ █Б┘И┘Ж╪з ┘╛┌С█Т ┌п╪з ╪з┘И╪▒ ╪и┘╣┘Ж ┌й┘И ╪п┘И╪и╪з╪▒█Б ┌й┘Д┌й ┌й╪▒┘Ж╪з ┘╛┌С█Т ┌п╪з█Ф\n\n2я╕ПтГг ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й█Т ╪п┘И╪▒╪з┘Ж ┘╛╪▒┘И┘Е┘И┌й┘И┌И ╪и╪к╪з╪ж█М┌║: <b>OGGY</b>\n\n3я╕ПтГг ┌й┘Е ╪з╪▓ ┌й┘Е ┌И┘╛╪з╪▓┘╣ ┌й╪▒█М┌║ <b>500тВ╣ █М╪з 5$</b> ┌й╪│█М ╪и┌╛█М ┌й╪▒┘Ж╪│█М ┘Е█М┌║',
        'after_success': 'тЬЕ ┌й╪з┘Е█М╪з╪и ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й█Т ╪и╪╣╪п╪М "┌Ж█М┌й ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж" ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒█М┌║',
        'enter_player_id': 'ЁЯОп <b>╪и╪▒╪з█Б ┌й╪▒┘Е ╪к╪╡╪п█М┘В ┌й█Т ┘Д█М█Т ╪з┘╛┘Ж╪з 1Win Player ID ╪п╪▒╪м ┌й╪▒█М┌║:</b>',
        'how_to_find_id': 'ЁЯУЭ <b>Player ID ┌й█М╪│█Т ┌И┌╛┘И┘Ж┌И█М┌║:</b>\n1. 1Win ╪з┌й╪з╪д┘Ж┘╣ ┘Е█М┌║ ┘Д╪з┌п ╪з┘Ж ┌й╪▒█М┌║\n2. ┘╛╪▒┘И┘Б╪з╪ж┘Д ╪│█М┘╣┘Ж┌п╪▓ ┘╛╪▒ ╪м╪з╪ж█М┌║\n3. Player ID ┘Ж┘Е╪и╪▒ ┌й╪з┘╛█М ┌й╪▒█М┌║\n4. █М█Б╪з┌║ ┘╛█М╪│┘╣ ┌й╪▒█М┌║',
        'enter_id_now': 'ЁЯФв <b>╪з╪и┌╛█М ╪з┘╛┘Ж╪з Player ID ╪п╪▒╪м ┌й╪▒█М┌║:</b>',
        'congratulations': 'ЁЯОЙ <b>┘Е╪и╪з╪▒┌й █Б┘И!</b>',
        'not_registered': 'тЭМ <b>┘Е╪╣╪░╪▒╪к╪М ╪в┘╛ ╪▒╪м╪│┘╣╪▒┌И ┘Ж█Б█М┌║ █Б█М┌║!</b>',
        'not_registered_msg': '╪и╪▒╪з█Б ┌й╪▒┘Е ┘╛█Б┘Д█Т REGISTER ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒█М┌║ ╪з┘И╪▒ █Б┘Е╪з╪▒█Т ┘Д┘Ж┌й ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒╪к█Т █Б┘И╪ж█Т ╪з┘╛┘Ж█М ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┘Е┌й┘Е┘Д ┌й╪▒█М┌║█Ф\n\n┌й╪з┘Е█М╪з╪и ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌й█Т ╪и╪╣╪п╪М ┘И╪з┘╛╪│ ╪в╪ж█М┌║ ╪з┘И╪▒ ╪з┘╛┘Ж╪з Player ID ╪п╪▒╪м ┌й╪▒█М┌║█Ф',
        'registered_no_deposit': 'ЁЯОЙ <b>╪и█Б╪к ╪з┌Ж┌╛█Т╪М ╪в┘╛ ┘Ж█Т ┌й╪з┘Е█М╪з╪и█М ┌й█Т ╪│╪з╪к┌╛ ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┘Е┌й┘Е┘Д ┌й╪▒ ┘Д█М █Б█Т!</b>',
        'sync_success': 'тЬЕ ╪в┘╛ ┌й╪з ╪з┌й╪з╪д┘Ж┘╣ ╪и┘И┘╣ ┌й█Т ╪│╪з╪к┌╛ sync █Б┘И ┌п█М╪з █Б█Т',
        'deposit_required': 'ЁЯТ┤ ╪│┌п┘Ж┘Д╪▓ ╪к┌й ╪▒╪│╪з╪ж█М ╪н╪з╪╡┘Д ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т╪М ╪з┘╛┘Ж█Т ╪з┌й╪з╪д┘Ж┘╣ ┘Е█М┌║ ┌й┘Е ╪з╪▓ ┌й┘Е <b>500тВ╣ █М╪з $5</b> ┌й╪│█М ╪и┌╛█М ┌й╪▒┘Ж╪│█М ┘Е█М┌║ ┌И┘╛╪з╪▓┘╣ ┌й╪▒█М┌║',
        'after_deposit': 'ЁЯХ╣я╕П ╪з┘╛┘Ж╪з ╪з┌й╪з╪д┘Ж┘╣ ┌й╪з┘Е█М╪з╪и█М ╪│█Т ╪▒█М┌Ж╪з╪▒╪м ┌й╪▒┘Ж█Т ┌й█Т ╪и╪╣╪п╪М CHECK DEPOSIT ╪и┘╣┘Ж ┘╛╪▒ ┌й┘Д┌й ┌й╪▒█М┌║ ╪з┘И╪▒ ╪▒╪│╪з╪ж█М ╪н╪з╪╡┘Д ┌й╪▒█М┌║',
        'limit_reached': "тЪая╕П <b>╪в┘╛ ╪з┘╛┘Ж█М ╪н╪п ╪к┌й ┘╛█Б┘Ж┌Ж ┌п╪ж█Т █Б█М┌║!</b>",
        'deposit_again': '╪и╪▒╪з█Б ┌й╪▒┘Е ┘╛█М╪┤┘Ж ┌п┘И╪ж█М ╪м╪з╪▒█М ╪▒┌й┌╛┘Ж█Т ┌й█Т ┘Д█М█Т ┘╛┌╛╪▒ ╪│█Т ┌й┘Е ╪з╪▓ ┌й┘Е <b>400тВ╣ █М╪з 4$</b> ┌й╪│█М ╪и┌╛█М ┌й╪▒┘Ж╪│█М ┘Е█М┌║ ┌И┘╛╪з╪▓┘╣ ┌й╪▒█М┌║',
        'get_signal': 'ЁЯХ╣я╕П ╪│┌п┘Ж┘Д ╪н╪з╪╡┘Д ┌й╪▒█М┌║',
        'next_signal': 'ЁЯФД ╪з┌п┘Д╪з ╪│┌п┘Ж┘Д',
        'back': 'ЁЯФЩ ┘И╪з┘╛╪│',
        'deposit_again_btn': 'ЁЯТ░ ╪п┘И╪и╪з╪▒█Б ┌И┘╛╪з╪▓┘╣ ┌й╪▒█М┌║',
        'register_now': 'ЁЯУ▓ ╪з╪и┌╛█М ╪▒╪м╪│┘╣╪▒ ┌й╪▒█М┌║',
        'check_deposit': 'ЁЯФН ┌И┘╛╪з╪▓┘╣ ┌Ж█М┌й ┌й╪▒█М┌║',
        'register_btn': 'ЁЯУ▓ ╪▒╪м╪│┘╣╪▒',
        'check_registration_btn': 'ЁЯФН ╪▒╪м╪│┘╣╪▒█М╪┤┘Ж ┌Ж█М┌й ┌й╪▒█М┌║',
        'motivational': "ЁЯТО ╪в┘╛ ╪и┌С█М ╪м█М╪к ┌й╪з ┘Е┘И┘В╪╣ ┌й┌╛┘И ╪▒█Б█Т █Б█М┌║! ┘╛█М╪┤┘Ж ┌п┘И╪ж█М ╪н╪з╪╡┘Д ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т /start ╪п╪и╪з╪ж█М┌║ ЁЯЪА"
    },
    'ne': {
        'welcome': 'тЬЕ <b>рддрдкрд╛рдИрдВрд▓реЗ рдиреЗрдкрд╛рд▓реА рдЪрдпрди рдЧрд░реНрдиреБрднрдпреЛ!</b>',
        'step1': 'ЁЯМР <b>рдЪрд░рдг 1 - рджрд░реНрддрд╛</b>',
        'account_must_be_new': 'тА╝я╕П <b>рдЦрд╛рддрд╛ рдирдпрд╛рдБ рд╣реБрдиреБрдкрд░реНрдЫ</b>',
        'step1_instructions': 'резя╕ПтГг рдпрджрд┐ "рджрд░реНрддрд╛" рдмрдЯрди рдХреНрд▓рд┐рдХ рдЧрд░реЗрдкрдЫрд┐ рддрдкрд╛рдИрдВрд▓реЗ рдкреБрд░рд╛рдиреЛ рдЦрд╛рддрд╛ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрднрдпреЛ рднрдиреЗ, рддрдкрд╛рдИрдВрд▓реЗ рдпрд╕рдмрд╛рдЯ рд▓рдЧ рдЖрдЙрдЯ рдЧрд░реНрдиреБрдкрд░реНрдЫ рд░ рдмрдЯрди рдлреЗрд░рд┐ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрдкрд░реНрдЫред\n\nреия╕ПтГг рджрд░реНрддрд╛рдХреЛ рд╕рдордпрдорд╛ рдкреНрд░реЛрдореЛрдХреЛрдб рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН: <b>OGGY</b>\n\nрейя╕ПтГг рдиреНрдпреВрдирддрдо рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН рдХрдореНрддрд┐рдорд╛ <b>500тВ╣ рд╡рд╛ 5$</b> рдХреБрдиреИ рдкрдирд┐ рдореБрджреНрд░рд╛рдорд╛',
        'after_success': 'тЬЕ рд╕рдлрд▓ рджрд░реНрддрд╛ рдкрдЫрд┐, "рджрд░реНрддрд╛ рдЬрд╛рдБрдЪ рдЧрд░реНрдиреБрд╣реЛрд╕реН" рдмрдЯрди рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'enter_player_id': 'ЁЯОп <b>рдХреГрдкрдпрд╛ рд╕рддреНрдпрд╛рдкрдирдХреЛ рд▓рд╛рдЧрд┐ рдЖрдлреНрдиреЛ 1Win Player ID рдкреНрд░рд╡рд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН:</b>',
        'how_to_find_id': 'ЁЯУЭ <b>Player ID рдХрд╕рд░реА рдЦреЛрдЬреНрдиреЗ:</b>\n1. 1Win рдЦрд╛рддрд╛рдорд╛ рд▓рдЧрдЗрди рдЧрд░реНрдиреБрд╣реЛрд╕реН\n2. рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╕реЗрдЯрд┐рдЩрд╣рд░реВрдорд╛ рдЬрд╛рдиреБрд╣реЛрд╕реН\n3. Player ID рдирдореНрдмрд░ рдХрдкреА рдЧрд░реНрдиреБрд╣реЛрд╕реН\n4. рдпрд╣рд╛рдБ рдкреЗрд╕реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'enter_id_now': 'ЁЯФв <b>рдЕрдм рдЖрдлреНрдиреЛ Player ID рдкреНрд░рд╡рд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН:</b>',
        'congratulations': 'ЁЯОЙ <b>рдмрдзрд╛рдИ рдЫ!</b>',
        'not_registered': 'тЭМ <b>рдорд╛рдл рдЧрд░реНрдиреБрд╣реЛрд╕реН, рддрдкрд╛рдИрдВ рджрд░реНрддрд╛ рдЧрд░рд┐рдПрдХреЛ рдЫреИрди!</b>',
        'not_registered_msg': 'рдХреГрдкрдпрд╛ рдкрд╣рд┐рд▓реЗ REGISTER рдмрдЯрди рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рд╣рд╛рдореНрд░реЛ рд▓рд┐рдЩреНрдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реЗрд░ рдЖрдлреНрдиреЛ рджрд░реНрддрд╛ рдкреВрд░рд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред\n\nрд╕рдлрд▓ рджрд░реНрддрд╛ рдкрдЫрд┐, рдлрд┐рд░реНрддрд╛ рдЖрдЙрдиреБрд╣реЛрд╕реН рд░ рдЖрдлреНрдиреЛ Player ID рдкреНрд░рд╡рд┐рд╖реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред',
        'registered_no_deposit': 'ЁЯОЙ <b>рд░рд╛рдореНрд░реЛ, рддрдкрд╛рдИрдВрд▓реЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рджрд░реНрддрд╛ рдкреВрд░рд╛ рдЧрд░реНрдиреБрднрдпреЛ!</b>',
        'sync_success': 'тЬЕ рддрдкрд╛рдИрдВрдХреЛ рдЦрд╛рддрд╛ рдмреЛрдЯрд╕рдБрдЧ рд╕рд┐рдЩреНрдХреНрд░реЛрдирд╛рдЗрдЬ рднрдПрдХреЛ рдЫ',
        'deposit_required': 'ЁЯТ┤ рд╕рд┐рдЧреНрдирд▓рд╣рд░реВ рдкрд╣реБрдБрдЪ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрди, рдЖрдлреНрдиреЛ рдЦрд╛рддрд╛рдорд╛ рдХрдореНрддрд┐рдорд╛ <b>500тВ╣ рд╡рд╛ $5</b> рдХреБрдиреИ рдкрдирд┐ рдореБрджреНрд░рд╛рдорд╛ рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'after_deposit': 'ЁЯХ╣я╕П рдЖрдлреНрдиреЛ рдЦрд╛рддрд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд░рд┐рдЪрд╛рд░реНрдЬ рдЧрд░реЗрдкрдЫрд┐, CHECK DEPOSIT рдмрдЯрди рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рдкрд╣реБрдБрдЪ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'limit_reached': "тЪая╕П <b>рддрдкрд╛рдИрдВ рдЖрдлреНрдиреЛ рд╕реАрдорд╛рдорд╛ рдкреБрдЧреНрдиреБрднрдпреЛ!</b>",
        'deposit_again': 'рдХреГрдкрдпрд╛ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдЬрд╛рд░реА рд░рд╛рдЦреНрди рдлреЗрд░рд┐ рдХрдореНрддрд┐рдорд╛ <b>400тВ╣ рд╡рд╛ 4$</b> рдХреБрдиреИ рдкрдирд┐ рдореБрджреНрд░рд╛рдорд╛ рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'get_signal': 'ЁЯХ╣я╕П рд╕рд┐рдЧреНрдирд▓ рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'next_signal': 'ЁЯФД рдЕрд░реНрдХреЛ рд╕рд┐рдЧреНрдирд▓',
        'back': 'ЁЯФЩ рдлрд┐рд░реНрддрд╛',
        'deposit_again_btn': 'ЁЯТ░ рдлреЗрд░рд┐ рдЬрдореНрдорд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'register_now': 'ЁЯУ▓ рдЕрд╣рд┐рд▓реЗ рджрд░реНрддрд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'check_deposit': 'ЁЯФН рдЬрдореНрдорд╛ рдЬрд╛рдБрдЪ рдЧрд░реНрдиреБрд╣реЛрд╕реН',
        'register_btn': 'ЁЯУ▓ рджрд░реНрддрд╛',
        'check_registration_btn': 'ЁЯФН рджрд░реНрддрд╛ рдЬрд╛рдБрдЪ',
        'motivational': "ЁЯТО рддрдкрд╛рдИрдВ рдареВрд▓реЛ рдЬрд┐рддреНрдиреЗ рдореМрдХрд╛ рдЧреБрдорд╛рдЙрдБрджреИ рд╣реБрдиреБрд╣реБрдиреНрдЫ! рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкреНрд░рд╛рдкреНрдд рдЧрд░реНрди /start рдерд┐рдЪреНрдиреБрд╣реЛрд╕реН ЁЯЪА"
    }
}

def get_message(lang, key):
    return MESSAGES.get(lang, MESSAGES['en']).get(key, '')

def send_message(chat_id, text, reply_markup=None):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    if reply_markup:
        payload['reply_markup'] = json.dumps(reply_markup)
    
    try:
        response = requests.post(url, json=payload)
        return response.json()
    except Exception as e:
        print(f"Error sending message: {e}")
        return None

def edit_message(chat_id, message_id, text, reply_markup=None):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/editMessageText"
    payload = {
        'chat_id': chat_id,
        'message_id': message_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    if reply_markup:
        payload['reply_markup'] = json.dumps(reply_markup)
    
    try:
        response = requests.post(url, json=payload)
        return response.json()
    except Exception as e:
        print(f"Error editing message: {e}")
        return None

def answer_callback(callback_id, text=None):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/answerCallbackQuery"
    payload = {'callback_query_id': callback_id}
    if text:
        payload['text'] = text
    
    try:
        requests.post(url, json=payload)
    except Exception as e:
        print(f"Error answering callback: {e}")

def get_user(user_id):
    return users_data.get(str(user_id), {
        'user_id': user_id,
        'language': 'en',
        'player_id': None,
        'predictions_used': 0,
        'total_deposit': 0,
        'registered': False
    })

def update_user(user_id, **kwargs):
    user_id = str(user_id)
    if user_id not in users_data:
        users_data[user_id] = {'user_id': user_id}
    
    for key, value in kwargs.items():
        users_data[user_id][key] = value

def add_postback_event(event_type, user_id, amount=0):
    postback_events.append({
        'event_type': event_type,
        'user_id': user_id,
        'amount': amount
    })

def check_user_status(player_id):
    user_events = [event for event in postback_events if event['user_id'] == player_id]
    
    if not user_events:
        return "not_registered"
    
    has_registration = any(event['event_type'] == 'registration' for event in user_events)
    total_deposit = sum(event['amount'] for event in user_events if event['event_type'] in ['first_deposit', 'deposit', 'recurring_deposit'])
    
    if not has_registration:
        return "not_registered"
    elif total_deposit < 5:
        return "registered_no_deposit"
    else:
        return "verified"

def show_language_selection(chat_id):
    keyboard = {
        'inline_keyboard': [
            [{'text': 'ЁЯЗ║ЁЯЗ╕ English', 'callback_data': 'lang_en'}],
            [{'text': 'ЁЯЗоЁЯЗ│ рд╣рд┐рдВрджреА', 'callback_data': 'lang_hi'}],
            [{'text': 'ЁЯЗзЁЯЗй ржмрж╛ржВрж▓рж╛', 'callback_data': 'lang_bn'}],
            [{'text': 'ЁЯЗ╡ЁЯЗ░ ╪з╪▒╪п┘И', 'callback_data': 'lang_ur'}],
            [{'text': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓реА', 'callback_data': 'lang_ne'}]
        ]
    }
    
    send_message(chat_id, "<b>Select your preferred Language:</b>", keyboard)

def handle_language_selection(chat_id, message_id, language):
    user = get_user(chat_id)
    update_user(chat_id, language=language)
    
    # Show registration section
    keyboard = {
        'inline_keyboard': [
            [{'text': get_message(language, 'register_btn'), 'url': AFFILIATE_LINK}],
            [{'text': get_message(language, 'check_registration_btn'), 'callback_data': 'check_registration'}]
        ]
    }
    
    message_text = (
        f"{get_message(language, 'welcome')}\n\n"
        f"{get_message(language, 'step1')}\n\n"
        f"{get_message(language, 'account_must_be_new')}\n\n"
        f"{get_message(language, 'step1_instructions')}\n\n"
        f"{get_message(language, 'after_success')}"
    )
    
    edit_message(chat_id, message_id, message_text, keyboard)

def handle_check_registration(chat_id, message_id):
    user = get_user(chat_id)
    language = user.get('language', 'en')
    
    message_text = (
        f"{get_message(language, 'enter_player_id')}\n\n"
        f"{get_message(language, 'how_to_find_id')}\n\n"
        f"{get_message(language, 'enter_id_now')}"
    )
    
    # Set user as waiting for player ID
    update_user(chat_id, waiting_for_player_id=True)
    
    edit_message(chat_id, message_id, message_text)

def handle_player_id(chat_id, player_id):
    user = get_user(chat_id)
    language = user.get('language', 'en')
    
    # Remove waiting flag
    update_user(chat_id, waiting_for_player_id=False)
    
    # Check user status
    if player_id == 'test123':
        user_status = "not_registered"
    elif player_id == 'test456':
        user_status = "registered_no_deposit"
    elif player_id == 'test789':
        user_status = "verified"
    else:
        user_status = check_user_status(player_id)
    
    if user_status == "not_registered":
        keyboard = {
            'inline_keyboard': [
                [{'text': get_message(language, 'register_now'), 'url': AFFILIATE_LINK}]
            ]
        }
        send_message(chat_id, 
            f"{get_message(language, 'not_registered')}\n\n{get_message(language, 'not_registered_msg')}", 
            keyboard
        )
        
    elif user_status == "registered_no_deposit":
        keyboard = {
            'inline_keyboard': [
                [{'text': 'ЁЯТ░ Deposit', 'url': AFFILIATE_LINK}],
                [{'text': get_message(language, 'check_deposit'), 'callback_data': 'check_deposit'}]
            ]
        }
        send_message(chat_id,
            f"{get_message(language, 'registered_no_deposit')}\n\n"
            f"{get_message(language, 'sync_success')}\n\n"
            f"{get_message(language, 'deposit_required')}\n\n"
            f"{get_message(language, 'after_deposit')}",
            keyboard
        )
        
    elif user_status == "verified":
        update_user(chat_id, player_id=player_id)
        
        keyboard = {
            'inline_keyboard': [
                [{'text': get_message(language, 'get_signal'), 'callback_data': 'get_signal'}]
            ]
        }
        send_message(chat_id, get_message(language, 'congratulations'), keyboard)

def handle_get_signal(chat_id, message_id):
    user = get_user(chat_id)
    language = user.get('language', 'en')
    
    predictions_used = user.get('predictions_used', 0)
    
    if predictions_used >= 15:
        handle_limit_reached(chat_id, message_id, language)
        return
    
    signal = random.choice(MINES_SIGNALS)
    update_user(chat_id, predictions_used=predictions_used + 1)
    
    signal_text = (
        f"ЁЯТг <b>Mines - Signals</b> ЁЯТг\n"
        f"тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
        f"ЁЯТг <b>Select:</b> {signal['traps']} traps\n"
        f"ЁЯТб <b>Accuracy:</b> {signal['accuracy']}%\n"
        f"тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
        f"ЁЯСЙ <b>Open the cells</b> ЁЯСЗ\n\n"
    )
    
    for row in signal['grid']:
        signal_text += f"{row}\n"
    
    signal_text += f"\nтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
    signal_text += f"тЭЗя╕П <b>Get a new signal</b> ЁЯСЗ"
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': get_message(language, 'next_signal'), 'callback_data': 'next_signal'},
                {'text': get_message(language, 'back'), 'callback_data': 'back_to_start'}
            ]
        ]
    }
    
    edit_message(chat_id, message_id, signal_text, keyboard)

def handle_next_signal(chat_id, message_id):
    # For next signal, we'll delete the current message and send a new one
    # This simulates the "delete and send new" behavior
    user = get_user(chat_id)
    language = user.get('language', 'en')
    
    predictions_used = user.get('predictions_used', 0)
    
    if predictions_used >= 15:
        handle_limit_reached(chat_id, message_id, language)
        return
    
    signal = random.choice(MINES_SIGNALS)
    update_user(chat_id, predictions_used=predictions_used + 1)
    
    signal_text = (
        f"ЁЯТг <b>Mines - Signals</b> ЁЯТг\n"
        f"тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
        f"ЁЯТг <b>Select:</b> {signal['traps']} traps\n"
        f"ЁЯТб <b>Accuracy:</b> {signal['accuracy']}%\n"
        f"тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
        f"ЁЯСЙ <b>Open the cells</b> ЁЯСЗ\n\n"
    )
    
    for row in signal['grid']:
        signal_text += f"{row}\n"
    
    signal_text += f"\nтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
    signal_text += f"тЭЗя╕П <b>Get a new signal</b> ЁЯСЗ"
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': get_message(language, 'next_signal'), 'callback_data': 'next_signal'},
                {'text': get_message(language, 'back'), 'callback_data': 'back_to_start'}
            ]
        ]
    }
    
    # Send new message instead of editing
    send_message(chat_id, signal_text, keyboard)

def handle_limit_reached(chat_id, message_id, language):
    keyboard = {
        'inline_keyboard': [
            [{'text': get_message(language, 'deposit_again_btn'), 'url': AFFILIATE_LINK}]
        ]
    }
    
    edit_message(chat_id, message_id, 
        f"{get_message(language, 'limit_reached')}\n\n{get_message(language, 'deposit_again')}", 
        keyboard
    )

def handle_back_to_start(chat_id, message_id):
    user = get_user(chat_id)
    language = user.get('language', 'en')
    
    keyboard = {
        'inline_keyboard': [
            [{'text': get_message(language, 'register_btn'), 'url': AFFILIATE_LINK}],
            [{'text': get_message(language, 'check_registration_btn'), 'callback_data': 'check_registration'}]
        ]
    }
    
    message_text = (
        f"{get_message(language, 'welcome')}\n\n"
        f"{get_message(language, 'step1')}\n\n"
        f"{get_message(language, 'account_must_be_new')}\n\n"
        f"{get_message(language, 'step1_instructions')}\n\n"
        f"{get_message(language, 'after_success')}"
    )
    
    edit_message(chat_id, message_id, message_text, keyboard)

# Flask Routes
@app.route('/')
def home():
    return "ЁЯдЦ Mines Predictor Bot - All Features Working!"

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.get_json()
        
        if 'message' in data:
            message = data['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            
            if text == '/start':
                show_language_selection(chat_id)
            else:
                user = get_user(chat_id)
                if user.get('waiting_for_player_id'):
                    handle_player_id(chat_id, text)
        
        elif 'callback_query' in data:
            callback = data['callback_query']
            chat_id = callback['message']['chat']['id']
            message_id = callback['message']['message_id']
            callback_data = callback['data']
            callback_id = callback['id']
            
            answer_callback(callback_id)
            
            if callback_data.startswith('lang_'):
                language = callback_data.split('_')[1]
                handle_language_selection(chat_id, message_id, language)
            elif callback_data == 'check_registration':
                handle_check_registration(chat_id, message_id)
            elif callback_data == 'get_signal':
                handle_get_signal(chat_id, message_id)
            elif callback_data == 'next_signal':
                handle_next_signal(chat_id, message_id)
            elif callback_data == 'back_to_start':
                handle_back_to_start(chat_id, message_id)
            elif callback_data == 'check_deposit':
                handle_check_registration(chat_id, message_id)
        
        return 'OK'
    
    except Exception as e:
        print(f"Webhook error: {e}")
        return 'OK'

@app.route('/set_webhook', methods=['GET'])
def set_webhook():
    if BOT_TOKEN:
        try:
            webhook_url = f"{VERCEL_URL}/webhook"
            response = requests.get(f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook?url={webhook_url}")
            return f"тЬЕ Webhook set: {response.json()}"
        except Exception as e:
            return f"тЭМ Webhook error: {e}"
    return "тЭМ BOT_TOKEN not set"

@app.route('/postback', methods=['GET'])
def handle_postback():
    try:
        event_type = request.args.get('type')
        user_id = request.args.get('user_id')
        amount = request.args.get('amount', 0, type=float)
        
        print(f"Postback received: {event_type} for user {user_id} amount {amount}")
        
        add_postback_event(event_type, user_id, amount)
        
        return jsonify({
            "status": "success",
            "event": event_type,
            "user_id": user_id,
            "amount": amount
        }), 200
        
    except Exception as e:
        print(f"Postback error: {e}")
        return jsonify({"status": "error"}), 500

@app.route('/debug')
def debug():
    return jsonify({
        "users_count": len(users_data),
        "postbacks_count": len(postback_events),
        "webhook_url": f"{VERCEL_URL}/webhook"
    })

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
